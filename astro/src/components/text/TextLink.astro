---
interface Props {
  color?: "primary" | "deemph";
  hideUnderline?: boolean;
  href?: string;
  onClick?: () => void;
  rel?: "noopener";
  target?: "_blank";
}

const {
  color,
  hideUnderline,
  href,
  rel,
  target,
} = Astro.props;
const linkColor = (!color || color === "primary") ? "#b2ebf2" : "#455a64";
---
<a 
  class={`link ${hideUnderline ? "no-underline" : ""}`}
  href={href ? href : "#"}
  rel={rel}
  target={target}
>
  <slot />
</a>
<style>
  .link {
    color: {linkColor};
    font-family: 'JetBrainsMono';
    line-height: 1.4;
  }
  .link-loading {
    animation-name: rainbow;
    animation-duration: 5s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
  }
  .no-underline {
    text-decoration: none;
  }
  @keyframes rainbow {
    0% { color: #f48fb1; }
    10% { color: #ef9a9a; }
    20% { color: #ce93d8; }
    30% { color: #b39ddb; }
    40% { color: #9fa8da; }
    50% { color: #90caf9; }
    60% { color: #81d4fa; }
    70% { color: #80deea; }
    80% { color: #80cbc4; }
    90% { color: #a5d6a7; }
    100% { color: #c5e1a5; }
  }
  @media only screen and (max-width: 600px) {
    .link {
      font-size: 0.9rem;
    }
  }
</style>
